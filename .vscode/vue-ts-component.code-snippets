{
  // Place your workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Vue_TS_Component": {
    "prefix": "vtc",
    "body": [
      "<template>",
      "\t<div></div>",
      "</template>\n",
      "<script lang=\"ts\">",
      "import Vue from 'vue';",
      "import { Component } from 'vue-property-decorator';\n",
      "@Component({",
      "\tcomponents: {}",
      "})",
      "export default class $1 extends Vue {",
      "\t$0",
      "}",
      "</script>\n",
      "<style lang=\"scss\" scoped>",
      "@import './style.scss';",
      "</style>"
    ]
  },
  "Vue_TS_Watch": {
    "prefix": "vtw",
    "body": [
      "@Watch('$0')",
      "$1(){}"
    ]
  },
  "Vue_TS_Prop": {
    "prefix": "vtp",
    "body": [
      "@Prop()",
      "readonly $0:any"
    ]
  },
  "Vue_TS_Inject": {
    "prefix": "vti",
    "body": [
      "@Inject($0)",
      "readonly $1:any"
    ]
  },
  "Vue_TS_Provide": {
    "prefix": "vtPro",
    "body": [
      "@Provide($0)",
      "$1:any"
    ]
  },
  "Vue_TS_Mounted": {
    "prefix": "vtm",
    "body": [
      "mounted(){ $0 }",
    ]
  },
  "Vue_TS_Options": {
    "prefix": "vtelo",
    "body": [
      "options: {",
        "name: '$0'",
      "},",
    ]
  }
}